spring:
  application:
    name: ema-backend

#  profiles:
#    include: secret

  config:
    import: optional:file:dev.env[.properties]

  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB       # 개별 파일의 최대 크기 (예: 10MB)
      max-request-size: 10MB    # 요청 전체의 최대 크기 (파일 포함)
    encoding:
      charset: UTF-8
      force: true

  jackson:
    serialization:
      indent-output: true

  sql:
    init:
      mode: always

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
        use_sql_comments: true
    open-in-view: false

  datasource:
    driver-class-name: ${DRIVER_CLASS_NAME}
    url: jdbc:mysql://${RDS_HOST}:${RDS_PORT}/${RDS_DB_NAME}
    username: ${RDS_USERNAME}
    password: ${RDS_PASSWORD}
    hikari:
      max-lifetime: 170000

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type: TRACE
    org.springframework.security: TRACE

server:
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  tomcat:
    max-http-form-post-size: 15MB

springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /v3/api-docs

kakao:
  client-id: ${KAKAO_CLIENT_ID}
  redirect-uri: ${KAKAO_REDIRECT_URI}

jwt:
  secret: ${JWT_SECRET_KEY}

cloud:
  aws:
    region:
      static: ap-northeast-2
    credentials:
      access-key: ${AWS_ACCESS_KEY_ID}
      secret-key: ${AWS_SECRET_ACCESS_KEY}

app:
  s3:
    bucket-name: mychatimagebucket
    base-url: https://mychatimagebucket.s3.ap-northeast-2.amazonaws.com

gemini:
  api:
    key: ${GOOGLE_API_KEY}
    url: "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent"
